type Query {
    cities(search: String): [City]!
    countries(search: String): [Country]!
}

type City {
    id: Int!
    name: String
    district: String
    population: Int
    country: Country
}

input DateFilter {
    start: String
    end: String
}

type Country {
    code: String!
    name: String
    continent: Continent
    region: String
    surfaceArea: Float
    indepYear: Int
    population: Int
    lifeExpectancy: Float
    gnp: Float
    cities: [City]
    capital: City
    languages: [Language]
    gdpValues(period: DateFilter, rollup: RollupPeriod): [GdpValue]
}

enum RollupPeriod {
    Day,
    Week,
    Month,
    Year
}

type GdpValue {
    value: Float
    date: String
    country: Country
}

type Language {
    name: String!
    isOfficial: String
    percentage: Float,
    country: Country!
}

enum Continent {
    Asia
    Europe
    North_America
    Africa
    Oceania
    Antarctica
    South_America
}

type PopulationUpdate {
    code: String!
    population: Int!
}

type Subscription {
    populationUpdated(code: String!): PopulationUpdate
}

enum UpdatePopulationType {
    Add,
    Remove
}

input UpdatePopulationInput {
    code: String!
    value: Int!
    type: UpdatePopulationType!
}

type Mutation {
    updatePopulation(input: UpdatePopulationInput!): Country
}

schema {
    query: Query
    subscription: Subscription
    mutation: Mutation
}
